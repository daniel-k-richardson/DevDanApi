name: build-and-test

on: [push]

jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dotnet-format
        run: dotnet tool install --global dotnet-format

      - name: Verify formatting
        run: dotnet format . --verify-no-changes --severity error -v m
        continue-on-error: false
        
      - name: Upload source code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: ./
          
  tests:
    runs-on: ubuntu-latest
    needs: [ precheck ]

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
  
  build:
    runs-on: ubuntu-latest
    needs: [precheck, tests]
    
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code
          
      - name: Build
        run: dotnet build --configuration Release
        
      - name: Debug Build Output
        run: ls -R ./src/**/bin/Release/

      - name: create artifact
        uses: actions/upload-artifact@v4
        with: 
          name: build-output
          path: ./src/**/bin/Release/net9.0/**
          
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: TestingDevDan # Replace with your Azure Web App name
          slot-name: production
          publish-profile: ${{ secrets.AZURE_CREDENTIALS }}
          package: ./src/**/bin/Release/